{"ast":null,"code":"var _jsxFileName = \"/Users/ujaspatel/Desktop/Mudbath-FrontEnd/src/Display.js\";\nimport { Container } from \"react-bootstrap\";\nimport Table from \"react-bootstrap/Table\";\nimport \"./Display.css\";\nimport * as productData from \"./products.json\";\nimport * as exchangeData from \"./exchange_rates.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst selectedCurrency = \"AUD\";\nconst products = productData.default;\nconst exchangeRates = exchangeData.default;\nconst aud = exchangeRates[0];\nconst usd = exchangeRates[1];\nconst cny = exchangeRates[2];\n\nfunction createProductRow(product) {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: product.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, product.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\nfunction convertCurrency(currencyFrom, currencyTo, amount) {\n  switch (currencyFrom) {\n    case \"AUD\":\n      if (currencyTo === \"USD\") {\n        return amount * aud.rates.USD;\n      } else if (currencyTo === \"CNY\") {\n        return amount * aud.rates.CNY;\n      }\n\n  }\n}\n\nfunction Display() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Display\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"Display-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Display-header\",\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        hover: true,\n        className: \"styled-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(createProductRow)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), console.log(convertCurrency(\"AUD\", \"USD\", 10))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Display;\nexport default Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Users/ujaspatel/Desktop/Mudbath-FrontEnd/src/Display.js"],"names":["Container","Table","productData","exchangeData","selectedCurrency","products","default","exchangeRates","aud","usd","cny","createProductRow","product","id","name","convertCurrency","currencyFrom","currencyTo","amount","rates","USD","CNY","Display","map","console","log"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,eAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,iBAA7B;AACA,OAAO,KAAKC,YAAZ,MAA8B,uBAA9B;;AAEA,MAAMC,gBAAgB,GAAG,KAAzB;AACA,MAAMC,QAAQ,GAAGH,WAAW,CAACI,OAA7B;AACA,MAAMC,aAAa,GAAGJ,YAAY,CAACG,OAAnC;AACA,MAAME,GAAG,GAAGD,aAAa,CAAC,CAAD,CAAzB;AACA,MAAME,GAAG,GAAGF,aAAa,CAAC,CAAD,CAAzB;AACA,MAAMG,GAAG,GAAGH,aAAa,CAAC,CAAD,CAAzB;;AAEA,SAASI,gBAAT,CAA0BC,OAA1B,EAAmC;AACjC,sBACE;AAAA,4BACE;AAAA,gBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAASF,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,SAASE,eAAT,CAAyBC,YAAzB,EAAuCC,UAAvC,EAAmDC,MAAnD,EAA2D;AACzD,UAAQF,YAAR;AACE,SAAK,KAAL;AACE,UAAIC,UAAU,KAAK,KAAnB,EAA0B;AACxB,eAAOC,MAAM,GAAGV,GAAG,CAACW,KAAJ,CAAUC,GAA1B;AACD,OAFD,MAEO,IAAIH,UAAU,KAAK,KAAnB,EAA0B;AAC/B,eAAOC,MAAM,GAAGV,GAAG,CAACW,KAAJ,CAAUE,GAA1B;AACD;;AANL;AAQD;;AAED,SAASC,OAAT,GAAmB;AACjB,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,cAArB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA,oBAAQjB,QAAQ,CAACkB,GAAT,CAAaZ,gBAAb;AAAR;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAcGa,OAAO,CAACC,GAAR,CAAYV,eAAe,CAAC,KAAD,EAAQ,KAAR,EAAe,EAAf,CAA3B,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KAnBQO,O;AAqBT,eAAeA,OAAf","sourcesContent":["import { Container } from \"react-bootstrap\";\nimport Table from \"react-bootstrap/Table\";\nimport \"./Display.css\";\nimport * as productData from \"./products.json\";\nimport * as exchangeData from \"./exchange_rates.json\";\n\nconst selectedCurrency = \"AUD\";\nconst products = productData.default;\nconst exchangeRates = exchangeData.default;\nconst aud = exchangeRates[0];\nconst usd = exchangeRates[1];\nconst cny = exchangeRates[2];\n\nfunction createProductRow(product) {\n  return (\n    <tr key={product.id}>\n      <td>{product.id}</td>\n      <td>{product.name}</td>\n      {/* <td>{product.price.base !== selectedCurrency ? convertCurrency (product.price.base, selectedCurrency, product.price.amount) : product.price.amount}</td> */}\n    </tr>\n  );\n}\n\nfunction convertCurrency(currencyFrom, currencyTo, amount) {\n  switch (currencyFrom) {\n    case \"AUD\":\n      if (currencyTo === \"USD\") {\n        return amount * aud.rates.USD;\n      } else if (currencyTo === \"CNY\") {\n        return amount * aud.rates.CNY;\n      }\n  }\n}\n\nfunction Display() {\n  return (\n    <div className=\"Display\">\n      <Container className=\"Display-main\">\n        <h1 className=\"Display-header\">Summary</h1>\n        <Table hover className=\"styled-table\">\n          <thead>\n            <tr>\n              <th>Id</th>\n              <th>Name</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          <tbody>{products.map(createProductRow)}</tbody>\n        </Table>\n      </Container>\n      {console.log(convertCurrency(\"AUD\", \"USD\", 10))}\n    </div>\n  );\n}\n\nexport default Display;\n"]},"metadata":{},"sourceType":"module"}